# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nlp.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nlp.proto',
  package='nlp',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\tnlp.proto\x12\x03nlp\"\x1b\n\x0bTextRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\"5\n\x15TextSimilarityRequest\x12\r\n\x05texta\x18\x01 \x01(\t\x12\r\n\x05textb\x18\x02 \x01(\t\"\x1f\n\x0cTextResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"$\n\x0eTextSimilarity\x12\x12\n\nsimilarity\x18\x01 \x01(\x02\"w\n\x03\x44oc\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x14\n\x0ctext_with_ws\x18\x02 \x01(\t\x12\x11\n\tis_tagged\x18\x03 \x01(\x08\x12\x11\n\tis_parsed\x18\x04 \x01(\x08\x12\x10\n\x08is_nered\x18\x05 \x01(\x08\x12\x14\n\x0cis_sentenced\x18\x06 \x01(\x08\"0\n\x03\x45nt\x12\r\n\x05start\x18\x01 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x05\x12\r\n\x05label\x18\x03 \x01(\t\"\"\n\x04Sent\x12\r\n\x05start\x18\x01 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x05\"(\n\nNoun_chunk\x12\r\n\x05start\x18\x01 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x05\"\xca\x04\n\x05Token\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x14\n\x0ctext_with_ws\x18\x02 \x01(\t\x12\x12\n\nwhitespace\x18\x03 \x01(\t\x12\x10\n\x08\x65nt_type\x18\x05 \x01(\t\x12\x0f\n\x07\x65nt_iob\x18\x06 \x01(\t\x12\r\n\x05lemma\x18\x07 \x01(\t\x12\x0c\n\x04norm\x18\x08 \x01(\t\x12\r\n\x05lower\x18\t \x01(\t\x12\r\n\x05shape\x18\n \x01(\t\x12\x0e\n\x06prefix\x18\x0b \x01(\t\x12\x0e\n\x06suffix\x18\x0c \x01(\t\x12\x0b\n\x03pos\x18\r \x01(\t\x12\x0b\n\x03tag\x18\x0e \x01(\t\x12\x0b\n\x03\x64\x65p\x18\x0f \x01(\t\x12\x10\n\x08is_alpha\x18\x10 \x01(\x08\x12\x10\n\x08is_ascii\x18\x11 \x01(\x08\x12\x10\n\x08is_digit\x18\x12 \x01(\x08\x12\x10\n\x08is_lower\x18\x13 \x01(\x08\x12\x10\n\x08is_upper\x18\x14 \x01(\x08\x12\x10\n\x08is_title\x18\x15 \x01(\x08\x12\x10\n\x08is_punct\x18\x16 \x01(\x08\x12\x15\n\ris_left_punct\x18\x17 \x01(\x08\x12\x16\n\x0eis_right_punct\x18\x18 \x01(\x08\x12\x10\n\x08is_space\x18\x19 \x01(\x08\x12\x12\n\nis_bracket\x18\x1a \x01(\x08\x12\x13\n\x0bis_currency\x18\x1b \x01(\x08\x12\x10\n\x08like_url\x18\x1c \x01(\x08\x12\x10\n\x08like_num\x18\x1d \x01(\x08\x12\x12\n\nlike_email\x18\x1e \x01(\x08\x12\x0e\n\x06is_oov\x18\x1f \x01(\x08\x12\x0f\n\x07is_stop\x18  \x01(\x08\x12\x15\n\ris_sent_start\x18! \x01(\x08\x12\x0c\n\x04head\x18\" \x01(\x05\"\xa8\x01\n\x0cParsedNLPRes\x12\r\n\x05model\x18\x01 \x01(\t\x12\x15\n\x03\x64oc\x18\x02 \x01(\x0b\x32\x08.nlp.Doc\x12\x16\n\x04\x65nts\x18\x03 \x03(\x0b\x32\x08.nlp.Ent\x12\x18\n\x05sents\x18\x04 \x03(\x0b\x32\t.nlp.Sent\x12$\n\x0bnoun_chunks\x18\x05 \x03(\x0b\x32\x0f.nlp.Noun_chunk\x12\x1a\n\x06tokens\x18\x06 \x03(\x0b\x32\n.nlp.Token\"%\n\x07Pattern\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"2\n\x04Rule\x12\n\n\x02id\x18\x01 \x01(\t\x12\x1e\n\x08patterns\x18\x02 \x03(\x0b\x32\x0c.nlp.Pattern\"/\n\x05Match\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05start\x18\x02 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x05\"&\n\x07Matches\x12\x1b\n\x07matches\x18\x01 \x03(\x0b\x32\n.nlp.Match2\xa3\x03\n\x03Nlp\x12\x32\n\tLoadModel\x12\x10.nlp.TextRequest\x1a\x11.nlp.TextResponse\"\x00\x12\x33\n\nNlpProcess\x12\x10.nlp.TextRequest\x1a\x11.nlp.ParsedNLPRes\"\x00\x12\x42\n\rDocSimilarity\x12\x1a.nlp.TextSimilarityRequest\x1a\x13.nlp.TextSimilarity\"\x00\x12)\n\x07\x41\x64\x64Rule\x12\t.nlp.Rule\x1a\x11.nlp.TextResponse\"\x00\x12\x33\n\nRemoveRule\x12\x10.nlp.TextRequest\x1a\x11.nlp.TextResponse\"\x00\x12(\n\x07GetRule\x12\x10.nlp.TextRequest\x1a\t.nlp.Rule\"\x00\x12.\n\nGetMatches\x12\x10.nlp.TextRequest\x1a\x0c.nlp.Matches\"\x00\x12\x35\n\x0cResetMatcher\x12\x10.nlp.TextRequest\x1a\x11.nlp.TextResponse\"\x00\x62\x06proto3'
)




_TEXTREQUEST = _descriptor.Descriptor(
  name='TextRequest',
  full_name='nlp.TextRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='nlp.TextRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=45,
)


_TEXTSIMILARITYREQUEST = _descriptor.Descriptor(
  name='TextSimilarityRequest',
  full_name='nlp.TextSimilarityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='texta', full_name='nlp.TextSimilarityRequest.texta', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='textb', full_name='nlp.TextSimilarityRequest.textb', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=100,
)


_TEXTRESPONSE = _descriptor.Descriptor(
  name='TextResponse',
  full_name='nlp.TextResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='nlp.TextResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=133,
)


_TEXTSIMILARITY = _descriptor.Descriptor(
  name='TextSimilarity',
  full_name='nlp.TextSimilarity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='similarity', full_name='nlp.TextSimilarity.similarity', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=135,
  serialized_end=171,
)


_DOC = _descriptor.Descriptor(
  name='Doc',
  full_name='nlp.Doc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='nlp.Doc.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text_with_ws', full_name='nlp.Doc.text_with_ws', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_tagged', full_name='nlp.Doc.is_tagged', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_parsed', full_name='nlp.Doc.is_parsed', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_nered', full_name='nlp.Doc.is_nered', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_sentenced', full_name='nlp.Doc.is_sentenced', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=173,
  serialized_end=292,
)


_ENT = _descriptor.Descriptor(
  name='Ent',
  full_name='nlp.Ent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='nlp.Ent.start', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='nlp.Ent.end', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label', full_name='nlp.Ent.label', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=294,
  serialized_end=342,
)


_SENT = _descriptor.Descriptor(
  name='Sent',
  full_name='nlp.Sent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='nlp.Sent.start', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='nlp.Sent.end', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=344,
  serialized_end=378,
)


_NOUN_CHUNK = _descriptor.Descriptor(
  name='Noun_chunk',
  full_name='nlp.Noun_chunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='nlp.Noun_chunk.start', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='nlp.Noun_chunk.end', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=380,
  serialized_end=420,
)


_TOKEN = _descriptor.Descriptor(
  name='Token',
  full_name='nlp.Token',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='nlp.Token.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text_with_ws', full_name='nlp.Token.text_with_ws', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='whitespace', full_name='nlp.Token.whitespace', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ent_type', full_name='nlp.Token.ent_type', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ent_iob', full_name='nlp.Token.ent_iob', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lemma', full_name='nlp.Token.lemma', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='norm', full_name='nlp.Token.norm', index=6,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lower', full_name='nlp.Token.lower', index=7,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='nlp.Token.shape', index=8,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='nlp.Token.prefix', index=9,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='suffix', full_name='nlp.Token.suffix', index=10,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pos', full_name='nlp.Token.pos', index=11,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='nlp.Token.tag', index=12,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dep', full_name='nlp.Token.dep', index=13,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_alpha', full_name='nlp.Token.is_alpha', index=14,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_ascii', full_name='nlp.Token.is_ascii', index=15,
      number=17, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_digit', full_name='nlp.Token.is_digit', index=16,
      number=18, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_lower', full_name='nlp.Token.is_lower', index=17,
      number=19, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_upper', full_name='nlp.Token.is_upper', index=18,
      number=20, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_title', full_name='nlp.Token.is_title', index=19,
      number=21, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_punct', full_name='nlp.Token.is_punct', index=20,
      number=22, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_left_punct', full_name='nlp.Token.is_left_punct', index=21,
      number=23, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_right_punct', full_name='nlp.Token.is_right_punct', index=22,
      number=24, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_space', full_name='nlp.Token.is_space', index=23,
      number=25, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_bracket', full_name='nlp.Token.is_bracket', index=24,
      number=26, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_currency', full_name='nlp.Token.is_currency', index=25,
      number=27, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='like_url', full_name='nlp.Token.like_url', index=26,
      number=28, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='like_num', full_name='nlp.Token.like_num', index=27,
      number=29, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='like_email', full_name='nlp.Token.like_email', index=28,
      number=30, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_oov', full_name='nlp.Token.is_oov', index=29,
      number=31, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_stop', full_name='nlp.Token.is_stop', index=30,
      number=32, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_sent_start', full_name='nlp.Token.is_sent_start', index=31,
      number=33, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='head', full_name='nlp.Token.head', index=32,
      number=34, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=423,
  serialized_end=1009,
)


_PARSEDNLPRES = _descriptor.Descriptor(
  name='ParsedNLPRes',
  full_name='nlp.ParsedNLPRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='nlp.ParsedNLPRes.model', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='doc', full_name='nlp.ParsedNLPRes.doc', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ents', full_name='nlp.ParsedNLPRes.ents', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sents', full_name='nlp.ParsedNLPRes.sents', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='noun_chunks', full_name='nlp.ParsedNLPRes.noun_chunks', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tokens', full_name='nlp.ParsedNLPRes.tokens', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1012,
  serialized_end=1180,
)


_PATTERN = _descriptor.Descriptor(
  name='Pattern',
  full_name='nlp.Pattern',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='nlp.Pattern.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='nlp.Pattern.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1182,
  serialized_end=1219,
)


_RULE = _descriptor.Descriptor(
  name='Rule',
  full_name='nlp.Rule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='nlp.Rule.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='patterns', full_name='nlp.Rule.patterns', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1221,
  serialized_end=1271,
)


_MATCH = _descriptor.Descriptor(
  name='Match',
  full_name='nlp.Match',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='nlp.Match.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start', full_name='nlp.Match.start', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='nlp.Match.end', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1273,
  serialized_end=1320,
)


_MATCHES = _descriptor.Descriptor(
  name='Matches',
  full_name='nlp.Matches',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='matches', full_name='nlp.Matches.matches', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1322,
  serialized_end=1360,
)

_PARSEDNLPRES.fields_by_name['doc'].message_type = _DOC
_PARSEDNLPRES.fields_by_name['ents'].message_type = _ENT
_PARSEDNLPRES.fields_by_name['sents'].message_type = _SENT
_PARSEDNLPRES.fields_by_name['noun_chunks'].message_type = _NOUN_CHUNK
_PARSEDNLPRES.fields_by_name['tokens'].message_type = _TOKEN
_RULE.fields_by_name['patterns'].message_type = _PATTERN
_MATCHES.fields_by_name['matches'].message_type = _MATCH
DESCRIPTOR.message_types_by_name['TextRequest'] = _TEXTREQUEST
DESCRIPTOR.message_types_by_name['TextSimilarityRequest'] = _TEXTSIMILARITYREQUEST
DESCRIPTOR.message_types_by_name['TextResponse'] = _TEXTRESPONSE
DESCRIPTOR.message_types_by_name['TextSimilarity'] = _TEXTSIMILARITY
DESCRIPTOR.message_types_by_name['Doc'] = _DOC
DESCRIPTOR.message_types_by_name['Ent'] = _ENT
DESCRIPTOR.message_types_by_name['Sent'] = _SENT
DESCRIPTOR.message_types_by_name['Noun_chunk'] = _NOUN_CHUNK
DESCRIPTOR.message_types_by_name['Token'] = _TOKEN
DESCRIPTOR.message_types_by_name['ParsedNLPRes'] = _PARSEDNLPRES
DESCRIPTOR.message_types_by_name['Pattern'] = _PATTERN
DESCRIPTOR.message_types_by_name['Rule'] = _RULE
DESCRIPTOR.message_types_by_name['Match'] = _MATCH
DESCRIPTOR.message_types_by_name['Matches'] = _MATCHES
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TextRequest = _reflection.GeneratedProtocolMessageType('TextRequest', (_message.Message,), {
  'DESCRIPTOR' : _TEXTREQUEST,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.TextRequest)
  })
_sym_db.RegisterMessage(TextRequest)

TextSimilarityRequest = _reflection.GeneratedProtocolMessageType('TextSimilarityRequest', (_message.Message,), {
  'DESCRIPTOR' : _TEXTSIMILARITYREQUEST,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.TextSimilarityRequest)
  })
_sym_db.RegisterMessage(TextSimilarityRequest)

TextResponse = _reflection.GeneratedProtocolMessageType('TextResponse', (_message.Message,), {
  'DESCRIPTOR' : _TEXTRESPONSE,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.TextResponse)
  })
_sym_db.RegisterMessage(TextResponse)

TextSimilarity = _reflection.GeneratedProtocolMessageType('TextSimilarity', (_message.Message,), {
  'DESCRIPTOR' : _TEXTSIMILARITY,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.TextSimilarity)
  })
_sym_db.RegisterMessage(TextSimilarity)

Doc = _reflection.GeneratedProtocolMessageType('Doc', (_message.Message,), {
  'DESCRIPTOR' : _DOC,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Doc)
  })
_sym_db.RegisterMessage(Doc)

Ent = _reflection.GeneratedProtocolMessageType('Ent', (_message.Message,), {
  'DESCRIPTOR' : _ENT,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Ent)
  })
_sym_db.RegisterMessage(Ent)

Sent = _reflection.GeneratedProtocolMessageType('Sent', (_message.Message,), {
  'DESCRIPTOR' : _SENT,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Sent)
  })
_sym_db.RegisterMessage(Sent)

Noun_chunk = _reflection.GeneratedProtocolMessageType('Noun_chunk', (_message.Message,), {
  'DESCRIPTOR' : _NOUN_CHUNK,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Noun_chunk)
  })
_sym_db.RegisterMessage(Noun_chunk)

Token = _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {
  'DESCRIPTOR' : _TOKEN,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Token)
  })
_sym_db.RegisterMessage(Token)

ParsedNLPRes = _reflection.GeneratedProtocolMessageType('ParsedNLPRes', (_message.Message,), {
  'DESCRIPTOR' : _PARSEDNLPRES,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.ParsedNLPRes)
  })
_sym_db.RegisterMessage(ParsedNLPRes)

Pattern = _reflection.GeneratedProtocolMessageType('Pattern', (_message.Message,), {
  'DESCRIPTOR' : _PATTERN,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Pattern)
  })
_sym_db.RegisterMessage(Pattern)

Rule = _reflection.GeneratedProtocolMessageType('Rule', (_message.Message,), {
  'DESCRIPTOR' : _RULE,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Rule)
  })
_sym_db.RegisterMessage(Rule)

Match = _reflection.GeneratedProtocolMessageType('Match', (_message.Message,), {
  'DESCRIPTOR' : _MATCH,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Match)
  })
_sym_db.RegisterMessage(Match)

Matches = _reflection.GeneratedProtocolMessageType('Matches', (_message.Message,), {
  'DESCRIPTOR' : _MATCHES,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Matches)
  })
_sym_db.RegisterMessage(Matches)



_NLP = _descriptor.ServiceDescriptor(
  name='Nlp',
  full_name='nlp.Nlp',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1363,
  serialized_end=1782,
  methods=[
  _descriptor.MethodDescriptor(
    name='LoadModel',
    full_name='nlp.Nlp.LoadModel',
    index=0,
    containing_service=None,
    input_type=_TEXTREQUEST,
    output_type=_TEXTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NlpProcess',
    full_name='nlp.Nlp.NlpProcess',
    index=1,
    containing_service=None,
    input_type=_TEXTREQUEST,
    output_type=_PARSEDNLPRES,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DocSimilarity',
    full_name='nlp.Nlp.DocSimilarity',
    index=2,
    containing_service=None,
    input_type=_TEXTSIMILARITYREQUEST,
    output_type=_TEXTSIMILARITY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddRule',
    full_name='nlp.Nlp.AddRule',
    index=3,
    containing_service=None,
    input_type=_RULE,
    output_type=_TEXTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveRule',
    full_name='nlp.Nlp.RemoveRule',
    index=4,
    containing_service=None,
    input_type=_TEXTREQUEST,
    output_type=_TEXTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRule',
    full_name='nlp.Nlp.GetRule',
    index=5,
    containing_service=None,
    input_type=_TEXTREQUEST,
    output_type=_RULE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetMatches',
    full_name='nlp.Nlp.GetMatches',
    index=6,
    containing_service=None,
    input_type=_TEXTREQUEST,
    output_type=_MATCHES,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ResetMatcher',
    full_name='nlp.Nlp.ResetMatcher',
    index=7,
    containing_service=None,
    input_type=_TEXTREQUEST,
    output_type=_TEXTRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_NLP)

DESCRIPTOR.services_by_name['Nlp'] = _NLP

# @@protoc_insertion_point(module_scope)
